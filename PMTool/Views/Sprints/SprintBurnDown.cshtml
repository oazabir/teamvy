@model PMTool.Models.Sprint

@{
    ViewBag.Title = "SprintBurnDown";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="row-fluid">
    <div class="span6">
        <h4 class="widgettitle">Sprint Burndown chart</h4>
        <br />
        <div id="chartplace" style="height: 300px;"></div>

    </div>

    @*        <div class="span6">
        <h4 class="widgettitle">Real Time Chart</h4>
        <br />
        <div id="realtime" style="height: 300px;"></div>
        <br />*@
    @*        <small>You can update a chart periodically to get a real-time effect by using a timer to insert the new data in the plot and redraw it.</small>*@
</div>


<script type="text/javascript">
    
    jQuery(document).ready(function(){		
        var highestYValue = 0;
       
        var id = @Model.SprintID;
        var url = '@Url.Action("SprintBurnDownData", "Sprints")' + "?sprintId=" + id;
     

        /*Preaper and nx2 dimensional array aginst Json data and return for burdown chart
        by Mahedee on 19-03-2014
        */
        function GetSprintData()
        {
            var result = [];
            jQuery.ajax({
                type: "POST",
                url: url,
                dataType: 'json',
                async: false,
                data: "{}",
                success: function(data) {
                    jQuery.each(data, function (i, item) {
                        var individual_result = [];
                        individual_result.push(item.XValue);
                        individual_result.push(item.YValue);
                        result.push(individual_result);
                        if(item.YValue > highestYValue)
                            highestYValue = item.YValue;
                    });
                }
            });

            //sprintbdown = result;
            //alert(highestYValue);
            return result;
        }

        //alert(GetSprintData()[0][1]);

        //alert(result[0][1]);

        function showTooltip(x, y, contents) {
            jQuery('<div id="tooltip" class="tooltipflot">' + contents + '</div>').css({
                position: 'absolute',
                display: 'none',
                top: y + 5,
                left: x + 5
            }).appendTo("body").fadeIn(200);
        }


        var plot = jQuery.plot(jQuery("#chartplace"),
             /*Call GetSprintDate() function to get plotting data as array by Mahedee on 19-03-2014 */
               //[ { data: html5, label: "HTML5(x)", color: "#72f905" }], {
                
                [{ data: GetSprintData(), label: "Estimated Hour: "+highestYValue, color: "#72f905" }], {
                    series: {
                        lines: { show: true, fill: true, fillColor: { colors: [{ opacity: 0.05 }, { opacity: 0.15 }] } },
                        points: { show: true }
                    },
                    legend: { position: 'nw' },
                    grid: { hoverable: true, clickable: true, borderColor: '#ccc', borderWidth: 1, labelMargin: 10 },
                    yaxis: { min: 0, max: highestYValue }  //yaxis max and min size
                });

        var previousPoint = null;
        jQuery("#chartplace").bind("plothover", function (event, pos, item) {
            jQuery("#x").text(pos.x.toFixed(2));
            jQuery("#y").text(pos.y.toFixed(2));

            if (item) {
                if (previousPoint != item.dataIndex) {
                    previousPoint = item.dataIndex;

                    jQuery("#tooltip").remove();
                    var x = item.datapoint[0].toFixed(2),
                    y = item.datapoint[1].toFixed(2);

                    showTooltip(item.pageX, item.pageY,
                                    item.series.label + " of " + x + " = " + y);
                }

            } else {
                jQuery("#tooltip").remove();
                previousPoint = null;
            }

        });

        jQuery("#chartplace").bind("plotclick", function (event, pos, item) {
            if (item) {
                jQuery("#clickdata").text("You clicked point " + item.dataIndex + " in " + item.series.label + ".");
                plot.highlight(item.series, item.datapoint);
            }
        });        
    });

</script>






