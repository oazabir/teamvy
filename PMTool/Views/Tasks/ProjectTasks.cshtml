@model IEnumerable<PMTool.Models.Task>

@{
    if (ViewBag.CurrentProject != null)
    {
        PMTool.Models.Project projetc = (PMTool.Models.Project)ViewBag.CurrentProject;
        ViewBag.Title = projetc.Name + " | Tasks";
    }
}


<div id='ModalpopupTaskDetails' data-url='@Url.Action("TaskDetails", "Tasks")' class="modal hide fade" tabindex="-1" role="dialog"  aria-hidden="true">
    <div id='popupcontainerTaskDetails'>
    </div>
</div>


@*<div class="pagetitle">
    <h1>Task List</h1>
    <span>@(((PMTool.Models.Project)ViewBag.CurrentProject).Name)  Tasks....</span>
</div>*@


<p>
    @Html.ActionLink("Create New", "Create", new { @ProjectID = ((PMTool.Models.Project)ViewBag.CurrentProject).ProjectID }, new { @title = "Add Task", @class = "btn btn-primary" })
    ||
    @Html.ActionLink("View Kanban", "Kanban", new { @ProjectID = ((PMTool.Models.Project)ViewBag.CurrentProject).ProjectID }, new { @title = "View Kanban", @class = "btn btn-inverse" })
    || 
  @*  Status*@

    @*<select id="Status" name="Status">
    @Html.DropDownListFor(model => model.ProjectStatusID, ((IEnumerable<PMTool.Models.ProjectStatus>)ViewBag.TaskStatus).Select(option => new SelectListItem
   {
       Text = (option == null ? "None" : option.Name), 
       Value = option.ProjectStatusID.ToString(),
       Selected = (Model != null) && (option.ProjectStatusID == Model.ProjectStatusID)
   }), "Choose...")
     </select>*@

    @*@Html.DropDownList("TaskStatus", "Choose...")*@
    <a href="#" class="show_hide_div btn btn-info btn-rounded" id="plus"> + Search Panel</a>
    @*<span>Search Panel</span>
    <button id ="plus" class="show_hide_div" value="+"></button>*@
    

</p>



@{
    PMTool.Models.Project project = (PMTool.Models.Project)ViewBag.CurrentProject;
    Html.RenderAction("_Search", "Tasks", new { projectID = project.ProjectID });
}

<div id="divTaskList" >
          <table class="table table-bordered dyntable" id="dyntable5">

    @{@Html.Partial("_TaskList", Model)}
        </table>



</div>

<script type="text/javascript">

    function onAddTag(tag) {
        alert("Added a tag: " + tag);
    }
    function onRemoveTag(tag) {
        alert("Removed a tag: " + tag);
    }

    function onChangeTag(input, tag) {
        alert("Changed a tag: " + tag);
    }

    jQuery(function () {

        jQuery('#tags_1').tagsInput({ width: 'auto' });
        jQuery('#tags_2').tagsInput({
            width: 'auto',
            onChange: function (elem, elem_tags) {
                var languages = ['php', 'ruby', 'javascript'];
                jQuery('.tag', elem_tags).each(function () {
                    if (jQuery(this).text().search(new RegExp('\\b(' + languages.join('|') + ')\\b')) >= 0)
                        jQuery(this).css('background-color', 'yellow');
                });
            }
        });
        jQuery('#tags_3').tagsInput({
            width: 'auto',

            //autocomplete_url:'test/fake_plaintext_endpoint.html' //jquery.autocomplete (not jquery ui)
            autocomplete_url: 'test/fake_json_endpoint.html' // jquery ui autocomplete requires a json endpoint
        });


        //jQuery('#TaskStatus').change(function () {

        //    alert('Working!!');

        //});


        // Uncomment this line to see the callback functions in action
        //			jQuery('input.tags').tagsInput({onAddTag:onAddTag,onRemoveTag:onRemoveTag,onChange: onChangeTag});		

        // Uncomment this line to see an input with no interface for adding new tags.
        //			jQuery('input.tags').tagsInput({interactive:false});

        //alert("Yes..");
        jQuery(".slidingDiv").hide();
        jQuery(".show_hide_div").show();
        jQuery("#plus").text("+ Search Panel");

        jQuery('.show_hide_div').toggle(function () {
            //alert("Working");
            jQuery(".slidingDiv").slideDown(
              function () {
                  jQuery("#plus").text("- Search Panel")
              }
            );
        }, function () {
            jQuery(".slidingDiv").slideUp(
            function () {
                jQuery("#plus").text("+ Search Panel")
            }
            );
        });

    });


    function ShowTaskDetails(taskid) {
        //alert("Working.." + taskid);
        var url = jQuery('#ModalpopupTaskDetails').data('url');


        jQuery.ajax({
            url: url,
            data: { id: taskid},
            cache: false,
            beforeSend: function () {
               jQuery("#ModalLoading").modal('show');
            },
            success: function (data) {
              
                jQuery('#popupcontainerTaskDetails').html(data);
                jQuery("#ModalLoading").modal('hide');
                jQuery("#ModalpopupTaskDetails").modal('show');
            },
            error: function (error) {
                jQuery.jGrowl('somethig is wrong', { life: 5000 });
            }
        });
        return false;
    }
</script>
